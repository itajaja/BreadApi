(function (e, t) { var n = {}; if (typeof n === "undefined") { n = {} } if (typeof t !== "function") { t = function (e) { return n } } (function () { var e = function (e) { var t = arguments[0], n = 1, r = arguments[n]; while (r) { t = t.slice(0, -1) + r.slice(1); r = arguments[++n] } return t }, t = function (e) { return "(?:" + e + ")" }, r = "[A-Za-z]", i = "[\\x0D]", s = "[0-9]", o = "[\\x22]", u = e(s, "[A-Fa-f]"), a = "[\\x0A]", f = "[\\x20]", l = t("%" + u + u), c = "[\\:\\/\\?\\#\\[\\]\\@]", h = "[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=]", p = e(c, h), d = e(r, s, "[\\-\\.\\_\\~]"), v = t(r + e(r, s, "[\\+\\-\\.]") + "*"), m = t(t(l + "|" + e(d, h, "[\\:]")) + "*"), g = t(t("25[0-5]") + "|" + t("2[0-4]" + s) + "|" + t("1" + s + s) + "|" + t("[1-9]" + s) + "|" + s), y = t(g + "\\." + g + "\\." + g + "\\." + g), b = t(u + "{1,4}"), w = t(t(b + "\\:" + b) + "|" + y), E = t(e(d, h, "[\\:]") + "+"), S = t("v" + u + "+\\." + e(d, h, "[\\:]") + "+"), x = t("\\[" + t(E + "|" + S) + "\\]"), T = t(t(l + "|" + e(d, h)) + "*"), N = t(x + "|" + y + "|" + T), C = t(s + "*"), k = t(t(m + "@") + "?" + N + t("\\:" + C) + "?"), L = t(l + "|" + e(d, h, "[\\:\\@]")), A = t(L + "*"), O = t(L + "+"), M = t(t(l + "|" + e(d, h, "[\\@]")) + "+"), _ = t(t("\\/" + A) + "*"), D = t("\\/" + t(O + _) + "?"), P = t(M + _), H = t(O + _), B = t(""), j = t(_ + "|" + D + "|" + P + "|" + H + "|" + B), F = t(t(L + "|[\\/\\?]") + "*"), I = t(t(L + "|[\\/\\?]") + "*"), q = t(t("\\/\\/" + k + _) + "|" + D + "|" + H + "|" + B), R = t(v + "\\:" + q + t("\\?" + F) + "?" + t("\\#" + I) + "?"), U = t(t("\\/\\/" + k + _) + "|" + D + "|" + P + "|" + B), z = t(U + t("\\?" + F) + "?" + t("\\#" + I) + "?"), W = t(R + "|" + z), X = t(v + "\\:" + q + t("\\?" + F) + "?"), V = new RegExp("^" + t("(" + R + ")|(" + z + ")") + "$"), $ = new RegExp("^(" + v + ")\\:" + t(t("\\/\\/(" + t("(" + m + ")@") + "?(" + N + ")" + t("\\:(" + C + ")") + "?)") + "?(" + _ + "|" + D + "|" + H + "|" + B + ")") + t("\\?(" + F + ")") + "?" + t("\\#(" + I + ")") + "?$"), J = new RegExp("^(){0}" + t(t("\\/\\/(" + t("(" + m + ")@") + "?(" + N + ")" + t("\\:(" + C + ")") + "?)") + "?(" + _ + "|" + D + "|" + P + "|" + B + ")") + t("\\?(" + F + ")") + "?" + t("\\#(" + I + ")") + "?$"), K = new RegExp("^(" + v + ")\\:" + t(t("\\/\\/(" + t("(" + m + ")@") + "?(" + N + ")" + t("\\:(" + C + ")") + "?)") + "?(" + _ + "|" + D + "|" + H + "|" + B + ")") + t("\\?(" + F + ")") + "?$"), Q = new RegExp("^" + t("\\#(" + I + ")") + "?$"), G = new RegExp("^" + t("(" + m + ")@") + "?(" + N + ")" + t("\\:(" + C + ")") + "?$"), Y = new RegExp(e("[^]", r, s, "[\\+\\-\\.]"), "g"), Z = new RegExp(e("[^\\%\\:]", d, h), "g"), et = new RegExp(e("[^\\%]", d, h), "g"), tt = new RegExp(e("[^\\%\\/\\:\\@]", d, h), "g"), nt = new RegExp(e("[^\\%\\/\\@]", d, h), "g"), rt = new RegExp(e("[^\\%]", d, h, "[\\:\\@\\/\\?]"), "g"), it = rt, st = new RegExp(e("[^]", d, h), "g"), ot = new RegExp(d, "g"), ut = new RegExp(e("[^\\%]", d, p), "g"), at = new RegExp(l + "+", "g"), ft = /^(?:([^:\/?#]+):)?(?:\/\/((?:([^\/?#@]*)@)?([^\/?#:]*)(?:\:(\d*))?))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?/i, lt = /^\.\.?\//, ct = /^\/\.(\/|$)/, ht = /^\/\.\.(\/|$)/, pt = /^\.\.?$/, dt = /^\/?.*?(?=\/|$)/, vt = "".match(/(){0}/)[1] === undefined, mt = function (e) { var t = e.charCodeAt(0); if (t < 128) { return "%" + t.toString(16).toUpperCase() } else if (t > 127 && t < 2048) { return "%" + (t >> 6 | 192).toString(16).toUpperCase() + "%" + (t & 63 | 128).toString(16).toUpperCase() } else { return "%" + (t >> 12 | 224).toString(16).toUpperCase() + "%" + (t >> 6 & 63 | 128).toString(16).toUpperCase() + "%" + (t & 63 | 128).toString(16).toUpperCase() } }, gt = function (e) { var t = "", n = 0, r, i; while (n < e.length) { r = parseInt(e.substr(n + 1, 2), 16); if (r < 128) { i = String.fromCharCode(r); if (i.match(ot)) { t += i } else { t += e.substr(n, 3) } n += 3 } else if (r > 191 && r < 224) { t += e.substr(n, 6); n += 6 } else { t += e.substr(n, 9); n += 9 } } return t }, yt = function (e) { var t = "", n = 0, r, i, s; while (n < e.length) { r = parseInt(e.substr(n + 1, 2), 16); if (r < 128) { t += String.fromCharCode(r); n += 3 } else if (r > 191 && r < 224) { i = parseInt(e.substr(n + 4, 2), 16); t += String.fromCharCode((r & 31) << 6 | i & 63); n += 6 } else { i = parseInt(e.substr(n + 4, 2), 16); s = parseInt(e.substr(n + 7, 2), 16); t += String.fromCharCode((r & 15) << 12 | (i & 63) << 6 | s & 63); n += 9 } } return t }, bt = function (e) { return e === undefined ? "undefined" : e === null ? "null" : Object.prototype.toString.call(e).split(" ").pop().split("]").shift().toLowerCase() }, wt = function () { this.errors = [] }, Et = {}; wt.prototype = { scheme: undefined, authority: undefined, userinfo: undefined, host: undefined, port: undefined, path: undefined, query: undefined, fragment: undefined, reference: undefined, errors: undefined }; Et.SCHEMES = {}; Et.parse = function (e, t) { var n, r = new wt, i; e = e ? e.toString() : ""; t = t || {}; if (t.reference === "suffix") { e = (t.scheme ? t.scheme + ":" : "") + "//" + e } n = e.match(V); if (n) { if (n[1]) { n = e.match($) } else { n = e.match(J) } } if (!n) { if (!t.tolerant) { r.errors.push("URI is not strictly valid.") } n = e.match(ft) } if (n) { if (vt) { r.scheme = n[1]; r.authority = n[2]; r.userinfo = n[3]; r.host = n[4]; r.port = parseInt(n[5], 10); r.path = n[6] || ""; r.query = n[7]; r.fragment = n[8]; if (isNaN(r.port)) { r.port = n[5] } } else { r.scheme = n[1] || undefined; r.authority = e.indexOf("//") !== -1 ? n[2] : undefined; r.userinfo = e.indexOf("@") !== -1 ? n[3] : undefined; r.host = e.indexOf("//") !== -1 ? n[4] : undefined; r.port = parseInt(n[5], 10); r.path = n[6] || ""; r.query = e.indexOf("?") !== -1 ? n[7] : undefined; r.fragment = e.indexOf("#") !== -1 ? n[8] : undefined; if (isNaN(r.port)) { r.port = e.match(/\/\/.*\:(?:\/|\?|\#|$)/) ? n[4] : undefined } } if (!r.scheme && !r.authority && !r.path && !r.query) { r.reference = "same-document" } else if (!r.scheme) { r.reference = "relative" } else if (!r.fragment) { r.reference = "absolute" } else { r.reference = "uri" } if (t.reference && t.reference !== "suffix" && t.reference !== r.reference) { r.errors.push("URI is not a " + t.reference + " reference.") } i = Et.SCHEMES[r.scheme || t.scheme]; if (i && i.parse) { i.parse(r, t) } } else { r.errors.push("URI can not be parsed.") } return r }; Et._recomposeAuthority = function (e) { var t = []; if (e.userinfo !== undefined || e.host !== undefined || typeof e.port === "number") { if (e.userinfo !== undefined) { t.push(e.userinfo.toString().replace(Z, mt)); t.push("@") } if (e.host !== undefined) { t.push(e.host.toString().toLowerCase().replace(et, mt)) } if (typeof e.port === "number") { t.push(":"); t.push(e.port.toString(10)) } } return t.length ? t.join("") : undefined }; Et.removeDotSegments = function (e) { var t = [], n; while (e.length) { if (e.match(lt)) { e = e.replace(lt, "") } else if (e.match(ct)) { e = e.replace(ct, "/") } else if (e.match(ht)) { e = e.replace(ht, "/"); t.pop() } else if (e === "." || e === "..") { e = "" } else { n = e.match(dt)[0]; e = e.slice(n.length); t.push(n) } } return t.join("") }; Et.serialize = function (e, t) { var n = [], r, i; t = t || {}; r = Et.SCHEMES[e.scheme || t.scheme]; if (r && r.serialize) { r.serialize(e, t) } if (t.reference !== "suffix" && e.scheme) { n.push(e.scheme.toString().toLowerCase().replace(Y, "")); n.push(":") } e.authority = Et._recomposeAuthority(e); if (e.authority !== undefined) { if (t.reference !== "suffix") { n.push("//") } n.push(e.authority); if (e.path && e.path.charAt(0) !== "/") { n.push("/") } } if (e.path) { i = Et.removeDotSegments(e.path.toString().replace(/%2E/ig, ".")); if (e.scheme) { i = i.replace(tt, mt) } else { i = i.replace(nt, mt) } if (e.authority === undefined) { i = i.replace(/^\/\//, "/%2F") } n.push(i) } if (e.query) { n.push("?"); n.push(e.query.toString().replace(rt, mt)) } if (e.fragment) { n.push("#"); n.push(e.fragment.toString().replace(it, mt)) } return n.join("").replace(at, gt).replace(/%[0-9A-Fa-f]{2}/g, function (e) { return e.toUpperCase() }) }; Et.resolveComponents = function (e, t, n, r) { var i = new wt; if (!r) { e = Et.parse(Et.serialize(e, n), n); t = Et.parse(Et.serialize(t, n), n) } n = n || {}; if (!n.tolerant && t.scheme) { i.scheme = t.scheme; i.authority = t.authority; i.userinfo = t.userinfo; i.host = t.host; i.port = t.port; i.path = Et.removeDotSegments(t.path); i.query = t.query } else { if (t.authority !== undefined) { i.authority = t.authority; i.userinfo = t.userinfo; i.host = t.host; i.port = t.port; i.path = Et.removeDotSegments(t.path); i.query = t.query } else { if (!t.path) { i.path = e.path; if (t.query !== undefined) { i.query = t.query } else { i.query = e.query } } else { if (t.path.charAt(0) === "/") { i.path = Et.removeDotSegments(t.path) } else { if (e.authority !== undefined && !e.path) { i.path = "/" + t.path } else if (!e.path) { i.path = t.path } else { i.path = e.path.slice(0, e.path.lastIndexOf("/") + 1) + t.path } i.path = Et.removeDotSegments(i.path) } i.query = t.query } i.authority = e.authority; i.userinfo = e.userinfo; i.host = e.host; i.port = e.port } i.scheme = e.scheme } i.fragment = t.fragment; return i }; Et.resolve = function (e, t, n) { return Et.serialize(Et.resolveComponents(Et.parse(e, n), Et.parse(t, n), n, true), n) }; Et.normalize = function (e, t) { if (typeof e === "string") { return Et.serialize(Et.parse(e, t), t) } else if (bt(e) === "object") { return Et.parse(Et.serialize(e, t), t) } return e }; Et.equal = function (e, t, n) { if (typeof e === "string") { e = Et.serialize(Et.parse(e, n), n) } else if (bt(e) === "object") { e = Et.serialize(e, n) } if (typeof t === "string") { t = Et.serialize(Et.parse(t, n), n) } else if (bt(t) === "object") { t = Et.serialize(t, n) } return e === t }; Et.escapeComponent = function (e) { return e && e.toString().replace(st, mt) }; Et.unescapeComponent = function (e) { return e && e.toString().replace(at, yt) }; n.Components = wt; n.URI = Et; n["URI"] = { SCHEMES: Et.SCHEMES, parse: Et.parse, removeDotSegments: Et.removeDotSegments, serialize: Et.serialize, resolveComponents: Et.resolveComponents, resolve: Et.resolve, normalize: Et.normalize, equal: Et.equal, escapeComponent: Et.escapeComponent, unescapeComponent: Et.unescapeComponent } })(); var n = n || this, t = t || function () { return n }; (function () { function f(e) { return e === undefined ? "undefined" : e === null ? "null" : Object.prototype.toString.call(e).split(" ").pop().split("]").shift().toLowerCase() } function l() { } function c(e) { l.prototype = e || {}; return new l } function h(e, t, n) { var i = {}, s; for (s in e) { if (e[s] !== r[s]) { i[s] = t.call(n, e[s], s, e) } } return i } function p(e) { return e !== undefined && e !== null ? e instanceof Array && !e.callee ? e : typeof e.length !== "number" || e.split || e.setInterval || e.call ? [e] : Array.prototype.slice.call(e) : [] } function d(e) { var t = [], n; switch (f(e)) { case "object": for (n in e) { if (e[n] !== r[n]) { t[t.length] = n } } break; case "array": for (n = e.length - 1; n >= 0; --n) { t[n] = n } break } return t } function v(e, t) { if (u(e, t) === -1) { e.push(t) } return e } function m(e, t) { var n = u(e, t); if (n > -1) { e.splice(n, 1) } return e } function g() { return [i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], "-", i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], "-4", i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], "-", i[Math.floor(Math.random() * 16) & 3 | 8], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], "-", i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)], i[Math.floor(Math.random() * 16)]].join("") } function y(e) { return encodeURIComponent(e).replace(/!/g, "%21").replace(/'/g, "%27").replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/\*/g, "%2A") } function b(e) { if (typeof e === "string" && e.indexOf("#") === -1) { e += "#" } return e } function w() { this.errors = []; this.validated = {} } function E(t, n, r, i) { if (n instanceof E) { if (typeof i !== "string") { i = n._fd } if (typeof r !== "string") { r = n._uri } n = n._value } if (typeof r !== "string") { r = "urn:uuid:" + g() + "#" } else if (r.indexOf(":") === -1) { r = b(e.resolve("urn:uuid:" + g() + "#", r)) } this._env = t; this._value = n; this._uri = r; this._fd = i || this._env._options["defaultFragmentDelimiter"] } function S(e, t) { var n, i; if (e instanceof E) { e = e.getValue() } switch (f(e)) { case "object": if (t) { n = {}; for (i in e) { if (e[i] !== r[i]) { n[i] = S(e[i], t) } } return n } else { return c(e) } break; case "array": if (t) { n = new Array(e.length); i = e.length; while (--i >= 0) { n[i] = S(e[i], t) } return n } else { return Array.prototype.slice.call(e) } break; default: return e } } function x(e, t, n, r) { var i; E.call(this, e, t, n); if (r === true) { this._schema = this } else if (t instanceof x && !(r instanceof x)) { this._schema = t._schema } else { this._schema = r instanceof x ? r : this._env.getDefaultSchema() || x.createEmptySchema(this._env) } i = this._schema.getValueOfProperty("fragmentResolution"); if (i === "dot-delimited") { this._fd = "." } else if (i === "slash-delimited") { this._fd = "/" } } function T(e, t, n) { var i = f(e), s = f(t), o, u; if (s === "undefined") { return S(e, true) } else if (i === "undefined" || s !== i) { return S(t, true) } else if (s === "object") { if (e instanceof x) { e = e.getAttributes() } if (t instanceof x) { t = t.getAttributes(); if (t["extends"] && n && t["extends"] instanceof x) { t["extends"] = [t["extends"]] } } o = S(e, true); for (u in t) { if (t[u] !== r[u]) { o[u] = T(e[u], t[u], n) } } return o } else { return S(t, true) } } function N() { this._id = g(); this._schemas = {}; this._options = {} } var e = t("./uri/uri").URI, r = {}, i = "0123456789abcdef".split(""), s, o, u, a; s = function (e, t, n) { var r = 0, i = e.length, s = new Array(i); for (; r < i; ++r) { s[r] = t.call(n, e[r], r, e) } return s }; if (Array.prototype.map) { s = function (e, t, n) { return Array.prototype.map.call(e, t, n) } } o = function (e, t, n) { var r = 0, i = e.length, s = []; for (; r < i; ++r) { if (t.call(n, e[r], r, e)) { s[s.length] = e[r] } } return s }; if (Array.prototype.filter) { o = function (e, t, n) { return Array.prototype.filter.call(e, t, n) } } u = function (e, t) { var n = 0, r = e.length; for (; n < r; ++n) { if (e[n] === t) { return n } } return -1 }; if (Array.prototype.indexOf) { u = function (e, t) { return Array.prototype.indexOf.call(e, t) } } w.prototype.addError = function (e, t, n, r, i) { this.errors.push({ uri: e instanceof E ? e.getURI() : e, schemaUri: t instanceof E ? t.getURI() : t, attribute: n, message: r, details: i }) }; w.prototype.registerValidation = function (e, t) { if (!this.validated[e]) { this.validated[e] = [t] } else { this.validated[e].push(t) } }; w.prototype.isValidatedBy = function (e, t) { return !!this.validated[e] && u(this.validated[e], t) !== -1 }; E.prototype.getEnvironment = function () { return this._env }; E.prototype.getType = function () { return f(this._value) }; E.prototype.getValue = function () { return this._value }; E.prototype.getURI = function () { return this._uri }; E.prototype.resolveURI = function (t) { return b(e.resolve(this._uri, t)) }; E.prototype.getPropertyNames = function () { return d(this._value) }; E.prototype.getProperty = function (e) { var t = this._value ? this._value[e] : undefined; if (t instanceof E) { return t } return new E(this._env, t, this._uri + this._fd + y(e), this._fd) }; E.prototype.getProperties = function () { var e = f(this._value), t = this; if (e === "object") { return h(this._value, function (e, n) { if (e instanceof E) { return e } return new E(t._env, e, t._uri + t._fd + y(n), t._fd) }) } else if (e === "array") { return s(this._value, function (e, n) { if (e instanceof E) { return e } return new E(t._env, e, t._uri + t._fd + y(n), t._fd) }) } }; E.prototype.getValueOfProperty = function (e) { if (this._value) { if (this._value[e] instanceof E) { return this._value[e]._value } return this._value[e] } }; E.prototype.equals = function (e) { if (e instanceof E) { return this._value === e._value } return this._value === e }; x.prototype = c(E.prototype); x.createEmptySchema = function (e) { var t = c(x.prototype); E.call(t, e, {}, undefined, undefined); t._schema = t; return t }; x.prototype.getSchema = function () { return this._schema }; x.prototype.getAttribute = function (e, t) { var n, r, i, s; if (!t && this._attributes && this._attributes.hasOwnProperty(e)) { return this._attributes[e] } n = this._schema.getProperty("properties").getProperty(e); r = n.getValueOfProperty("parser"); i = this.getProperty(e); if (typeof r === "function") { s = r(i, n, t); if (!t && this._attributes) { this._attributes[e] = s } return s } return i.getValue() }; x.prototype.getAttributes = function () { var e, t, n, i, s; if (!this._attributes && this.getType() === "object") { e = this.getProperties(); t = this._schema.getProperty("properties"); this._attributes = {}; for (n in e) { if (e[n] !== r[n]) { i = t && t.getProperty(n); s = i && i.getValueOfProperty("parser"); if (typeof s === "function") { this._attributes[n] = s(e[n], i) } else { this._attributes[n] = e[n].getValue() } } } } return S(this._attributes, false) }; x.prototype.getLink = function (e, t) { var n = this.getAttribute("links", [e, t]); if (n && n.length && n[n.length - 1]) { return n[n.length - 1] } }; x.prototype.validate = function (e, t, n, r, i) { var s = this._schema.getValueOfProperty("validator"); if (!(e instanceof E)) { e = this.getEnvironment().createInstance(e) } if (!(t instanceof w)) { t = new w } if (typeof s === "function" && !t.isValidatedBy(e.getURI(), this.getURI())) { t.registerValidation(e.getURI(), this.getURI()); s(e, this, this._schema, t, n, r, i) } return t }; N.prototype.clone = function () { var e = new N; e._schemas = c(this._schemas); e._options = c(this._options); return e }; N.prototype.createInstance = function (e, t) { var n; t = b(t); if (e instanceof E && (!t || e.getURI() === t)) { return e } n = new E(this, e, t); return n }; N.prototype.createSchema = function (e, t, n) { var r, i; n = b(n); if (e instanceof x && (!n || e._uri === n) && (!t || e._schema.equals(t))) { return e } r = new x(this, e, n, t); i = r.getSchema().getValueOfProperty("initializer"); if (typeof i === "function") { r = i(r) } this._schemas[r._uri] = r; this._schemas[n] = r; r.getAttributes(); return r }; N.prototype.createEmptySchema = function () { var e = x.createEmptySchema(this); this._schemas[e._uri] = e; return e }; N.prototype.findSchema = function (e) { return this._schemas[b(e)] }; N.prototype.setOption = function (e, t) { this._options[e] = t }; N.prototype.getOption = function (e) { return this._options[e] }; N.prototype.setDefaultFragmentDelimiter = function (e) { if (typeof e === "string" && e.length > 0) { this._options["defaultFragmentDelimiter"] = e } }; N.prototype.getDefaultFragmentDelimiter = function () { return this._options["defaultFragmentDelimiter"] }; N.prototype.setDefaultSchemaURI = function (e) { if (typeof e === "string") { this._options["defaultSchemaURI"] = b(e) } }; N.prototype.getDefaultSchema = function () { return this.findSchema(this._options["defaultSchemaURI"]) }; N.prototype.validate = function (e, t) { var n, r, i, s = new w; try { n = this.createInstance(e); s.instance = n } catch (o) { s.addError(o.uri, o.schemaUri, o.attribute, o.message, o.details) } try { r = this.createSchema(t); s.schema = r; i = r.getSchema(); s.schemaSchema = i } catch (o) { s.addError(o.uri, o.schemaUri, o.attribute, o.message, o.details) } if (i) { i.validate(r, s) } if (s.errors.length) { return s } return r.validate(n, s) }; N.prototype._checkForInvalidInstances = function (e, t) { var n = [], i = [[t, this._schemas[t]]], s = 0, o, u, a, l, c, h; while (s++ < e && i.length) { o = i.shift(); u = o[0]; a = o[1]; if (a instanceof x) { if (this._schemas[a._uri] !== a) { n.push("Instance " + u + " does not match " + a._uri) } else { c = a.getAttributes(); for (h in c) { if (c[h] !== r[h]) { i.push([u + "/" + y(h), c[h]]) } } } } else if (f(a) === "object") { c = a; for (h in c) { if (c.hasOwnProperty(h)) { i.push([u + "/" + y(h), c[h]]) } } } else if (f(a) === "array") { c = a; for (h = 0; h < c.length; ++h) { i.push([u + "/" + y(h), c[h]]) } } } return n.length ? n : s }; a = { _environments: {}, _defaultEnvironmentID: "", isJSONInstance: function (e) { return e instanceof E }, isJSONSchema: function (e) { return e instanceof x }, createEnvironment: function (e) { e = e || this._defaultEnvironmentID; if (!this._environments[e]) { throw new Error("Unknown Environment ID") } return this._environments[e].clone() }, Environment: N, registerEnvironment: function (e, t) { e = e || (t || 0)._id; if (e && !this._environments[e] && t instanceof N) { t._id = e; this._environments[e] = t } }, setDefaultEnvironmentID: function (e) { if (typeof e === "string") { if (!this._environments[e]) { throw new Error("Unknown Environment ID") } this._defaultEnvironmentID = e } }, getDefaultEnvironmentID: function () { return this._defaultEnvironmentID }, typeOf: f, createObject: c, mapObject: h, mapArray: s, filterArray: o, searchArray: u, toArray: p, keys: d, pushUnique: v, popFirst: m, clone: S, randomUUID: g, escapeURIComponent: y, formatURI: b, inherits: T }; this.JSV = a; n.JSV = a; t("./environments") })(); (function () { function O(t, r, i, s) { var o = {}, u, a, f, l, c; if (t.getType() === "object") { u = r.getAttribute("patternProperties"); l = t.getProperties(); for (a in u) { if (u[a] !== e[a]) { f = null; try { f = new RegExp(a) } catch (h) { if (i) { i.addError(r, s, "patternProperties", "Invalid pattern", a) } } if (f) { for (c in l) { if (l[c] !== e[c] && f.test(c)) { o[c] = o[c] ? n.pushUnique(o[c], u[a]) : [u[a]] } } } } } } return o } var e = {}, n = t("./jsv").JSV, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w, E, S, x, T, N, C, k, L, A; r = function (t, n, r, i, s) { Error.call(this, i); this.uri = t.getURI(); this.schemaUri = n.getURI(); this.attribute = r; this.message = i; this.description = i; this.details = s }; r.prototype = new Error; r.prototype.constructor = r; r.prototype.name = "InitializationError"; i = { string: function (e, t) { return e.getType() === "string" }, number: function (e, t) { return e.getType() === "number" }, integer: function (e, t) { return e.getType() === "number" && e.getValue() % 1 === 0 }, "boolean": function (e, t) { return e.getType() === "boolean" }, object: function (e, t) { return e.getType() === "object" }, array: function (e, t) { return e.getType() === "array" }, "null": function (e, t) { return e.getType() === "null" }, any: function (e, t) { return true } }; s = new n.Environment; s.setOption("strict", false); s.setOption("validateReferences", false); o = { $schema: "http://json-schema.org/draft-00/hyper-schema#", id: "http://json-schema.org/draft-00/schema#", type: "object", properties: { type: { type: ["string", "array"], items: { type: ["string", { $ref: "#" }] }, optional: true, uniqueItems: true, "default": "any", parser: function (e, t) { var r; if (e.getType() === "string") { return e.getValue() } else if (e.getType() === "object") { return e.getEnvironment().createSchema(e, t.getEnvironment().findSchema(t.resolveURI("#"))) } else if (e.getType() === "array") { r = t.getValueOfProperty("parser"); return n.mapArray(e.getProperties(), function (e) { return r(e, t) }) } return "any" }, validator: function (t, r, i, s, o, u, a) { var f = n.toArray(r.getAttribute("type")), l, c, h, p, d; if (t.getType() !== "undefined" && f && f.length) { d = i.getValueOfProperty("typeValidators") || {}; for (l = 0, c = f.length; l < c; ++l) { h = f[l]; if (n.isJSONSchema(h)) { p = n.createObject(s); p.errors = []; p.validated = n.clone(s.validated); if (h.validate(t, p, o, u, a).errors.length === 0) { return true } } else { if (d[h] !== e[h] && typeof d[h] === "function") { if (d[h](t, s)) { return true } } else { return true } } } s.addError(t, r, "type", "Instance is not a required type", f); return false } return true }, typeValidators: i }, properties: { type: "object", additionalProperties: { $ref: "#" }, optional: true, "default": {}, parser: function (e, t, r) { var i = e.getEnvironment(), s = t.getEnvironment(); if (e.getType() === "object") { if (r) { return i.createSchema(e.getProperty(r), s.findSchema(t.resolveURI("#"))) } else { return n.mapObject(e.getProperties(), function (e) { return i.createSchema(e, s.findSchema(t.resolveURI("#"))) }) } } return {} }, validator: function (t, n, r, i, s, o, u) { var a, f; if (t.getType() === "object") { a = n.getAttribute("properties"); for (f in a) { if (a[f] !== e[f] && a[f]) { a[f].validate(t.getProperty(f), i, t, n, f) } } } } }, items: { type: [{ $ref: "#" }, "array"], items: { $ref: "#" }, optional: true, "default": {}, parser: function (e, t) { if (e.getType() === "object") { return e.getEnvironment().createSchema(e, t.getEnvironment().findSchema(t.resolveURI("#"))) } else if (e.getType() === "array") { return n.mapArray(e.getProperties(), function (e) { return e.getEnvironment().createSchema(e, t.getEnvironment().findSchema(t.resolveURI("#"))) }) } return e.getEnvironment().createEmptySchema() }, validator: function (e, t, r, i, s, o, u) { var a, f, l, c, h, p; if (e.getType() === "array") { a = e.getProperties(); f = t.getAttribute("items"); p = t.getAttribute("additionalProperties"); if (n.typeOf(f) === "array") { for (l = 0, c = a.length; l < c; ++l) { h = f[l] || p; if (h !== false) { h.validate(a[l], i, e, t, l) } else { i.addError(e, t, "additionalProperties", "Additional items are not allowed", h) } } } else { h = f || p; for (l = 0, c = a.length; l < c; ++l) { h.validate(a[l], i, e, t, l) } } } } }, optional: { type: "boolean", optional: true, "default": false, parser: function (e, t) { return !!e.getValue() }, validator: function (e, t, n, r, i, s, o) { if (e.getType() === "undefined" && !t.getAttribute("optional")) { r.addError(e, t, "optional", "Property is required", false) } }, validationRequired: true }, additionalProperties: { type: [{ $ref: "#" }, "boolean"], optional: true, "default": {}, parser: function (e, t) { if (e.getType() === "object") { return e.getEnvironment().createSchema(e, t.getEnvironment().findSchema(t.resolveURI("#"))) } else if (e.getType() === "boolean" && e.getValue() === false) { return false } return e.getEnvironment().createEmptySchema() }, validator: function (t, r, i, s, o, u, a) { var f, l, c, h; if (t.getType() === "object") { f = r.getAttribute("additionalProperties"); l = r.getAttribute("properties") || {}; c = t.getProperties(); for (h in c) { if (c[h] !== e[h] && c[h] && l[h] === e[h]) { if (n.isJSONSchema(f)) { f.validate(c[h], s, t, r, h) } else if (f === false) { s.addError(t, r, "additionalProperties", "Additional properties are not allowed", f) } } } } } }, requires: { type: ["string", { $ref: "#" }], optional: true, parser: function (e, t) { if (e.getType() === "string") { return e.getValue() } else if (e.getType() === "object") { return e.getEnvironment().createSchema(e, t.getEnvironment().findSchema(t.resolveURI("#"))) } }, validator: function (e, t, r, i, s, o, u) { var a; if (e.getType() !== "undefined" && s && s.getType() !== "undefined") { a = t.getAttribute("requires"); if (typeof a === "string") { if (s.getProperty(a).getType() === "undefined") { i.addError(e, t, "requires", 'Property requires sibling property "' + a + '"', a) } } else if (n.isJSONSchema(a)) { a.validate(s, i) } } } }, minimum: { type: "number", optional: true, parser: function (e, t) { if (e.getType() === "number") { return e.getValue() } }, validator: function (e, t, n, r, i, s, o) { var u, a; if (e.getType() === "number") { u = t.getAttribute("minimum"); a = t.getAttribute("minimumCanEqual"); if (typeof u === "number" && (e.getValue() < u || a === false && e.getValue() === u)) { r.addError(e, t, "minimum", "Number is less then the required minimum value", u) } } } }, maximum: { type: "number", optional: true, parser: function (e, t) { if (e.getType() === "number") { return e.getValue() } }, validator: function (e, t, n, r, i, s, o) { var u, a; if (e.getType() === "number") { u = t.getAttribute("maximum"); a = t.getAttribute("maximumCanEqual"); if (typeof u === "number" && (e.getValue() > u || a === false && e.getValue() === u)) { r.addError(e, t, "maximum", "Number is greater then the required maximum value", u) } } } }, minimumCanEqual: { type: "boolean", optional: true, requires: "minimum", "default": true, parser: function (e, t) { if (e.getType() === "boolean") { return e.getValue() } return true } }, maximumCanEqual: { type: "boolean", optional: true, requires: "maximum", "default": true, parser: function (e, t) { if (e.getType() === "boolean") { return e.getValue() } return true } }, minItems: { type: "integer", optional: true, minimum: 0, "default": 0, parser: function (e, t) { if (e.getType() === "number") { return e.getValue() } return 0 }, validator: function (e, t, n, r, i, s, o) { var u; if (e.getType() === "array") { u = t.getAttribute("minItems"); if (typeof u === "number" && e.getProperties().length < u) { r.addError(e, t, "minItems", "The number of items is less then the required minimum", u) } } } }, maxItems: { type: "integer", optional: true, minimum: 0, parser: function (e, t) { if (e.getType() === "number") { return e.getValue() } }, validator: function (e, t, n, r, i, s, o) { var u; if (e.getType() === "array") { u = t.getAttribute("maxItems"); if (typeof u === "number" && e.getProperties().length > u) { r.addError(e, t, "maxItems", "The number of items is greater then the required maximum", u) } } } }, pattern: { type: "string", optional: true, format: "regex", parser: function (e, t) { if (e.getType() === "string") { try { return new RegExp(e.getValue()) } catch (n) { return n } } }, validator: function (e, t, n, r, i, s, o) { var u; try { u = t.getAttribute("pattern"); if (u instanceof Error) { r.addError(t, n, "pattern", "Invalid pattern", t.getValueOfProperty("pattern")) } else if (e.getType() === "string" && u && !u.test(e.getValue())) { r.addError(e, t, "pattern", "String does not match pattern", u.toString()) } } catch (a) { r.addError(t, n, "pattern", "Invalid pattern", t.getValueOfProperty("pattern")) } } }, minLength: { type: "integer", optional: true, minimum: 0, "default": 0, parser: function (e, t) { if (e.getType() === "number") { return e.getValue() } return 0 }, validator: function (e, t, n, r, i, s, o) { var u; if (e.getType() === "string") { u = t.getAttribute("minLength"); if (typeof u === "number" && e.getValue().length < u) { r.addError(e, t, "minLength", "String is less then the required minimum length", u) } } } }, maxLength: { type: "integer", optional: true, parser: function (e, t) { if (e.getType() === "number") { return e.getValue() } }, validator: function (e, t, n, r, i, s, o) { var u; if (e.getType() === "string") { u = t.getAttribute("maxLength"); if (typeof u === "number" && e.getValue().length > u) { r.addError(e, t, "maxLength", "String is greater then the required maximum length", u) } } } }, "enum": { type: "array", optional: true, minItems: 1, uniqueItems: true, parser: function (e, t) { if (e.getType() === "array") { return e.getValue() } }, validator: function (e, t, n, r, i, s, o) { var u, a, f; if (e.getType() !== "undefined") { u = t.getAttribute("enum"); if (u) { for (a = 0, f = u.length; a < f; ++a) { if (e.equals(u[a])) { return true } } r.addError(e, t, "enum", "Instance is not one of the possible values", u) } } } }, title: { type: "string", optional: true }, description: { type: "string", optional: true }, format: { type: "string", optional: true, parser: function (e, t) { if (e.getType() === "string") { return e.getValue() } }, validator: function (t, n, r, i, s, o, u) { var a, f; if (t.getType() === "string") { a = n.getAttribute("format"); f = r.getValueOfProperty("formatValidators"); if (typeof a === "string" && f[a] !== e[a] && typeof f[a] === "function" && !f[a].call(this, t, i)) { i.addError(t, n, "format", "String is not in the required format", a) } } }, formatValidators: { uri: function (e, t) { var n = /^(?:(?:https?):\/\/)(?:\S+(?::\S*)?@)?(?:(?!10(?:\.\d{1,3}){3})(?!127(?:\.\d{1,3}){3})(?!169\.254(?:\.\d{1,3}){2})(?!192\.168(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]+\-?)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]+\-?)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/i; return !!n.test(e._value) }, email: function (e, t) { var n = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i; return !!n.test(e._value) } } }, contentEncoding: { type: "string", optional: true }, "default": { type: "any", optional: true }, maxDecimal: { type: "integer", optional: true, minimum: 0, parser: function (e, t) { if (e.getType() === "number") { return e.getValue() } }, validator: function (e, t, n, r, i, s, o) { var u, a; if (e.getType() === "number") { u = t.getAttribute("maxDecimal"); if (typeof u === "number") { a = e.getValue().toString(10).split(".")[1]; if (a && a.length > u) { r.addError(e, t, "maxDecimal", "The number of decimal places is greater then the allowed maximum", u) } } } } }, disallow: { type: ["string", "array"], items: { type: "string" }, optional: true, uniqueItems: true, parser: function (e, t) { if (e.getType() === "string" || e.getType() === "array") { return e.getValue() } }, validator: function (t, r, i, s, o, u, a) { var f = n.toArray(r.getAttribute("disallow")), l, c, h, p, d; if (t.getType() !== "undefined" && f && f.length) { p = i.getValueOfProperty("typeValidators") || {}; for (l = 0, c = f.length; l < c; ++l) { h = f[l]; if (n.isJSONSchema(h)) { d = n.createObject(s); d.errors = []; d.validated = n.clone(s.validated); if (h.validate(t, d, o, u, a).errors.length === 0) { s.addError(t, r, "disallow", "Instance is a disallowed type", f); return false } } else if (p[h] !== e[h] && typeof p[h] === "function") { if (p[h](t, s)) { s.addError(t, r, "disallow", "Instance is a disallowed type", f); return false } } } return true } return true }, typeValidators: i }, "extends": { type: [{ $ref: "#" }, "array"], items: { $ref: "#" }, optional: true, "default": {}, parser: function (e, t) { if (e.getType() === "object") { return e.getEnvironment().createSchema(e, t.getEnvironment().findSchema(t.resolveURI("#"))) } else if (e.getType() === "array") { return n.mapArray(e.getProperties(), function (e) { return e.getEnvironment().createSchema(e, t.getEnvironment().findSchema(t.resolveURI("#"))) }) } }, validator: function (e, t, r, i, s, o, u) { var a = t.getAttribute("extends"), f, l; if (a) { if (n.isJSONSchema(a)) { a.validate(e, i, s, o, u) } else if (n.typeOf(a) === "array") { for (f = 0, l = a.length; f < l; ++f) { a[f].validate(e, i, s, o, u) } } } } } }, optional: true, "default": {}, fragmentResolution: "dot-delimited", parser: function (e, t) { if (e.getType() === "object") { return e.getEnvironment().createSchema(e, t) } }, validator: function (t, r, i, s, o, u, a) { var f = r.getPropertyNames(), l, c, h = i.getAttribute("properties"), p = t.getEnvironment().getOption("strict"), d; for (l in h) { if (h[l] !== e[l]) { if (h[l].getValueOfProperty("validationRequired")) { n.pushUnique(f, l) } if (p && h[l].getValueOfProperty("deprecated")) { n.popFirst(f, l) } } } for (l = 0, c = f.length; l < c; ++l) { if (h[f[l]] !== e[f[l]]) { d = h[f[l]].getValueOfProperty("validator"); if (typeof d === "function") { d(t, r, h[f[l]], s, o, u, a) } } } } }; u = { $schema: "http://json-schema.org/draft-00/hyper-schema#", id: "http://json-schema.org/draft-00/hyper-schema#", properties: { links: { type: "array", items: { $ref: "links#" }, optional: true, parser: function (e, t, r) { var i, s = t.getValueOfProperty("items")["$ref"], o = t.getEnvironment().findSchema(s), u = o && o.getValueOfProperty("parser"), a; r = n.toArray(r); if (typeof u === "function") { i = n.mapArray(e.getProperties(), function (e) { return u(e, o) }) } else { i = n.toArray(e.getValue()) } if (r[0]) { i = n.filterArray(i, function (e) { return e["rel"] === r[0] }) } if (r[1]) { a = t.getValueOfProperty("selfReferenceVariable"); i = n.mapArray(i, function (e) { var t = r[1], i = e["href"]; i = i.replace(/\{(.+)\}/g, function (e, n, r, i) { var s; if (n === a) { s = t.getValue() } else { s = t.getValueOfProperty(n) } return s !== undefined ? String(s) : "" }); return i ? n.formatURI(t.resolveURI(i)) : i }) } return i }, selfReferenceVariable: "-this" }, fragmentResolution: { type: "string", optional: true, "default": "dot-delimited" }, root: { type: "boolean", optional: true, "default": false }, readonly: { type: "boolean", optional: true, "default": false }, pathStart: { type: "string", optional: true, format: "uri", validator: function (e, t, n, r, i, s, o) { var u; if (e.getType() !== "undefined") { u = t.getAttribute("pathStart"); if (typeof u === "string") { if (e.getURI().indexOf(u) !== 0) { r.addError(e, t, "pathStart", "Instance's URI does not start with " + u, u) } } } } }, mediaType: { type: "string", optional: true, format: "media-type" }, alternate: { type: "array", items: { $ref: "#" }, optional: true } }, links: [{ href: "{$ref}", rel: "full" }, { href: "{$schema}", rel: "describedby" }, { href: "{id}", rel: "self" }], initializer: function (e) { var t, i, s; t = e._schema.getLink("describedby", e); if (t && e._schema._uri !== t) { if (e._env._schemas[t]) { e._schema = e._env._schemas[t]; initializer = e._schema.getValueOfProperty("initializer"); if (typeof initializer === "function") { return initializer(e) } else { return e } } else if (e._env._options["validateReferences"]) { throw new r(e, e._schema, "{link:describedby}", "Unknown schema reference", t) } } t = e._schema.getLink("full", e); if (t && e._uri !== t) { if (e._env._schemas[t]) { e = e._env._schemas[t]; return e } else if (e._env._options["validateReferences"]) { throw new r(e, e._schema, "{link:full}", "Unknown schema reference", t) } } i = e.getAttribute("extends"); if (n.isJSONSchema(i)) { s = n.inherits(i, e, true); e = e._env.createSchema(s, e._schema, e._uri) } t = e._schema.getLink("self", e); if (n.typeOf(t) === "string") { e._uri = n.formatURI(t) } return e } }; a = { $schema: "http://json-schema.org/draft-00/hyper-schema#", id: "http://json-schema.org/draft-00/links#", type: "object", properties: { href: { type: "string" }, rel: { type: "string" }, method: { type: "string", "default": "GET", optional: true }, enctype: { type: "string", requires: "method", optional: true }, properties: { type: "object", additionalProperties: { $ref: "hyper-schema#" }, optional: true, parser: function (e, t, r) { var i = e.getEnvironment(), s = t.getEnvironment(), o = t.getValueOfProperty("additionalProperties")["$ref"]; if (e.getType() === "object") { if (r) { return i.createSchema(e.getProperty(r), s.findSchema(t.resolveURI(o))) } else { return n.mapObject(e.getProperties(), function (e) { return i.createSchema(e, s.findSchema(t.resolveURI(o))) }) } } } } }, parser: function (e, t) { var r = t.getProperty("properties"); if (e.getType() === "object") { return n.mapObject(e.getProperties(), function (e, t) { var n = r.getProperty(t), i = n && n.getValueOfProperty("parser"); if (typeof i === "function") { return i(e, n) } return e.getValue() }) } return e.getValue() } }; s.setOption("defaultFragmentDelimiter", "."); s.setOption("defaultSchemaURI", "http://json-schema.org/draft-00/schema#"); f = s.createSchema(o, true, "http://json-schema.org/draft-00/schema#"); l = s.createSchema(n.inherits(f, s.createSchema(u, true, "http://json-schema.org/draft-00/hyper-schema#"), true), true, "http://json-schema.org/draft-00/hyper-schema#"); s.setOption("defaultSchemaURI", "http://json-schema.org/draft-00/hyper-schema#"); c = s.createSchema(a, l, "http://json-schema.org/draft-00/links#"); f = s.createSchema(f.getValue(), l, "http://json-schema.org/draft-00/schema#"); l = s.createSchema(l.getValue(), l, "http://json-schema.org/draft-00/hyper-schema#"); c = s.createSchema(c.getValue(), l, "http://json-schema.org/draft-00/links#"); h = n.inherits(o, { $schema: "http://json-schema.org/draft-01/hyper-schema#", id: "http://json-schema.org/draft-01/schema#" }); p = n.inherits(u, { $schema: "http://json-schema.org/draft-01/hyper-schema#", id: "http://json-schema.org/draft-01/hyper-schema#" }); d = n.inherits(a, { $schema: "http://json-schema.org/draft-01/hyper-schema#", id: "http://json-schema.org/draft-01/links#" }); s.setOption("defaultSchemaURI", "http://json-schema.org/draft-01/schema#"); v = s.createSchema(h, true, "http://json-schema.org/draft-01/schema#"); m = s.createSchema(n.inherits(v, s.createSchema(p, true, "http://json-schema.org/draft-01/hyper-schema#"), true), true, "http://json-schema.org/draft-01/hyper-schema#"); s.setOption("defaultSchemaURI", "http://json-schema.org/draft-01/hyper-schema#"); g = s.createSchema(d, m, "http://json-schema.org/draft-01/links#"); v = s.createSchema(v.getValue(), m, "http://json-schema.org/draft-01/schema#"); m = s.createSchema(m.getValue(), m, "http://json-schema.org/draft-01/hyper-schema#"); g = s.createSchema(g.getValue(), m, "http://json-schema.org/draft-01/links#"); y = n.inherits(h, { $schema: "http://json-schema.org/draft-02/hyper-schema#", id: "http://json-schema.org/draft-02/schema#", properties: { uniqueItems: { type: "boolean", optional: true, "default": false, parser: function (e, t) { return !!e.getValue() }, validator: function (e, t, n, r, i, s, o) { var u, a, f, l, c; if (e.getType() === "array" && t.getAttribute("uniqueItems")) { u = e.getProperties(); for (a = 0, f = u.length - 1; a < f; ++a) { for (l = a + 1, c = u.length; l < c; ++l) { if (u[a].equals(u[l])) { r.addError(e, t, "uniqueItems", "Array can only contain unique items", { x: a, y: l }) } } } } } }, maxDecimal: { deprecated: true }, divisibleBy: { type: "number", minimum: 0, minimumCanEqual: false, optional: true, parser: function (e, t) { if (e.getType() === "number") { return e.getValue() } }, validator: function (e, t, n, r, i, s, o) { var u; if (e.getType() === "number") { u = t.getAttribute("divisibleBy"); if (u === 0) { r.addError(e, t, "divisibleBy", "Nothing is divisible by 0", u) } else if (u !== 1 && e.getValue() / u % 1 !== 0) { r.addError(e, t, "divisibleBy", "Number is not divisible by " + u, u) } } } } }, fragmentResolution: "slash-delimited" }); b = n.inherits(p, { id: "http://json-schema.org/draft-02/hyper-schema#", properties: { fragmentResolution: { "default": "slash-delimited" } } }); w = n.inherits(d, { $schema: "http://json-schema.org/draft-02/hyper-schema#", id: "http://json-schema.org/draft-02/links#", properties: { targetSchema: { $ref: "hyper-schema#", parser: m.getAttribute("parser") } } }); s.setOption("defaultFragmentDelimiter", "/"); s.setOption("defaultSchemaURI", "http://json-schema.org/draft-02/schema#"); E = s.createSchema(y, true, "http://json-schema.org/draft-02/schema#"); S = s.createSchema(n.inherits(E, s.createSchema(b, true, "http://json-schema.org/draft-02/hyper-schema#"), true), true, "http://json-schema.org/draft-02/hyper-schema#"); s.setOption("defaultSchemaURI", "http://json-schema.org/draft-02/hyper-schema#"); x = s.createSchema(w, S, "http://json-schema.org/draft-02/links#"); E = s.createSchema(E.getValue(), S, "http://json-schema.org/draft-02/schema#"); S = s.createSchema(S.getValue(), S, "http://json-schema.org/draft-02/hyper-schema#"); x = s.createSchema(x.getValue(), S, "http://json-schema.org/draft-02/links#"); T = n.inherits(y, { $schema: "http://json-schema.org/draft-03/schema#", id: "http://json-schema.org/draft-03/schema#", properties: { patternProperties: { type: "object", additionalProperties: { $ref: "#" }, "default": {}, parser: E.getValueOfProperty("properties")["properties"]["parser"], validator: function (t, n, r, i, s, o, u) { var a, f, l; if (t.getType() === "object") { a = O(t, n, i, r); for (f in a) { if (a[f] !== e[f]) { l = a[f].length; while (l--) { a[f][l].validate(t.getProperty(f), i, t, n, f) } } } } } }, additionalProperties: { validator: function (t, r, i, s, o, u, a) { var f, l, c, h, p; if (t.getType() === "object") { f = r.getAttribute("additionalProperties"); l = r.getAttribute("properties") || {}; c = t.getProperties(); h = O(t, r); for (p in c) { if (c[p] !== e[p] && c[p] && l[p] === e[p] && h[p] === e[p]) { if (n.isJSONSchema(f)) { f.validate(c[p], s, t, r, p) } else if (f === false) { s.addError(t, r, "additionalProperties", "Additional properties are not allowed", f) } } } } } }, items: { validator: function (e, t, r, i, s, o, u) { var a, f, l, c, h, p; if (e.getType() === "array") { a = e.getProperties(); f = t.getAttribute("items"); p = t.getAttribute("additionalItems"); if (n.typeOf(f) === "array") { for (l = 0, c = a.length; l < c; ++l) { h = f[l] || p; if (h !== false) { h.validate(a[l], i, e, t, l) } else { i.addError(e, t, "additionalItems", "Additional items are not allowed", h) } } } else { h = f || p; for (l = 0, c = a.length; l < c; ++l) { h.validate(a[l], i, e, t, l) } } } } }, additionalItems: { type: [{ $ref: "#" }, "boolean"], "default": {}, parser: E.getValueOfProperty("properties")["additionalProperties"]["parser"], validator: function (e, t, n, r, i, s, o) { var u, a, f, l; if (e.getType() === "array" && t.getProperty("items").getType() === "undefined") { u = t.getAttribute("additionalItems"); a = e.getProperties(); if (u !== false) { for (f = 0, l = a.length; f < l; ++f) { u.validate(a[f], r, e, t, f) } } else if (a.length) { r.addError(e, t, "additionalItems", "Additional items are not allowed", u) } } } }, optional: { validationRequired: false, deprecated: true }, required: { type: "boolean", "default": false, parser: function (e, t) { return !!e.getValue() }, validator: function (e, t, n, r, i, s, o) { if (e.getType() === "undefined" && t.getAttribute("required")) { r.addError(e, t, "required", "Property is required", true) } } }, requires: { deprecated: true }, dependencies: { type: "object", additionalProperties: { type: ["string", "array", { $ref: "#" }], items: { type: "string" } }, "default": {}, parser: function (e, t, r) { function i(e) { var n = e.getType(); if (n === "string" || n === "array") { return e.getValue() } else if (n === "object") { return e.getEnvironment().createSchema(e, t.getEnvironment().findSchema(t.resolveURI("#"))) } } if (e.getType() === "object") { if (r) { return i(e.getProperty(r)) } else { return n.mapObject(e.getProperties(), i) } } return {} }, validator: function (t, r, i, s, o, u, a) { var f, l, c, h, p, d; if (t.getType() === "object") { f = r.getAttribute("dependencies"); for (l in f) { if (f[l] !== e[l] && t.getProperty(l).getType() !== "undefined") { c = f[l]; h = n.typeOf(c); if (h === "string") { if (t.getProperty(c).getType() === "undefined") { s.addError(t, r, "dependencies", 'Property "' + l + '" requires sibling property "' + c + '"', f) } } else if (h === "array") { for (p = 0, d = c.length; p < d; ++p) { if (t.getProperty(c[p]).getType() === "undefined") { s.addError(t, r, "dependencies", 'Property "' + l + '" requires sibling property "' + c[p] + '"', f) } } } else if (n.isJSONSchema(c)) { c.validate(t, s) } } } } } }, minimumCanEqual: { deprecated: true }, maximumCanEqual: { deprecated: true }, exclusiveMinimum: { type: "boolean", "default": false, parser: function (e, t) { return !!e.getValue() } }, exclusiveMaximum: { type: "boolean", "default": false, parser: function (e, t) { return !!e.getValue() } }, minimum: { validator: function (e, t, n, r, i, s, o) { var u, a; if (e.getType() === "number") { u = t.getAttribute("minimum"); a = t.getAttribute("exclusiveMinimum") || !e.getEnvironment().getOption("strict") && !t.getAttribute("minimumCanEqual"); if (typeof u === "number" && (e.getValue() < u || a === true && e.getValue() === u)) { r.addError(e, t, "minimum", "Number is less then the required minimum value", u) } } } }, maximum: { validator: function (e, t, n, r, i, s, o) { var u, a; if (e.getType() === "number") { u = t.getAttribute("maximum"); a = t.getAttribute("exclusiveMaximum") || !e.getEnvironment().getOption("strict") && !t.getAttribute("maximumCanEqual"); if (typeof u === "number" && (e.getValue() > u || a === true && e.getValue() === u)) { r.addError(e, t, "maximum", "Number is greater then the required maximum value", u) } } } }, contentEncoding: { deprecated: true }, divisibleBy: { exclusiveMinimum: true }, disallow: { items: { type: ["string", { $ref: "#" }] }, parser: y["properties"]["type"]["parser"] }, id: { type: "string", format: "uri" }, $ref: { type: "string", format: "uri" }, $schema: { type: "string", format: "uri" } }, dependencies: { exclusiveMinimum: "minimum", exclusiveMaximum: "maximum" }, initializer: function (e) { var t, i, s, o = e.getValueOfProperty("$schema"), u = e.getValueOfProperty("$ref"), a = e.getValueOfProperty("id"); if (o) { t = e.resolveURI(o); if (t && e._schema._uri !== t) { if (e._env._schemas[t]) { e._schema = e._env._schemas[t]; initializer = e._schema.getValueOfProperty("initializer"); if (typeof initializer === "function") { return initializer(e) } else { return e } } else if (e._env._options["validateReferences"]) { throw new r(e, e._schema, "$schema", "Unknown schema reference", t) } } } if (u) { t = e.resolveURI(u); if (t && e._uri !== t) { if (e._env._schemas[t]) { e = e._env._schemas[t]; return e } else if (e._env._options["validateReferences"]) { throw new r(e, e._schema, "$ref", "Unknown schema reference", t) } } } i = e.getAttribute("extends"); if (n.isJSONSchema(i)) { s = n.inherits(i, e, true); e = e._env.createSchema(s, e._schema, e._uri) } if (a) { t = e.resolveURI(a); if (n.typeOf(t) === "string") { e._uri = n.formatURI(t) } } return e } }); N = n.inherits(b, { $schema: "http://json-schema.org/draft-03/hyper-schema#", id: "http://json-schema.org/draft-03/hyper-schema#", properties: { links: { selfReferenceVariable: "@" }, root: { deprecated: true }, contentEncoding: { deprecated: false }, alternate: { deprecated: true } } }); C = n.inherits(w, { $schema: "http://json-schema.org/draft-03/hyper-schema#", id: "http://json-schema.org/draft-03/links#", properties: { href: { required: true, format: "link-description-object-template" }, rel: { required: true }, properties: { deprecated: true }, schema: { $ref: "http://json-schema.org/draft-03/hyper-schema#" } } }); s.setOption("validateReferences", true); s.setOption("defaultSchemaURI", "http://json-schema.org/draft-03/schema#"); s.createSchema({}, true, "http://json-schema.org/draft-03/schema#"); s.createSchema({}, true, "http://json-schema.org/draft-03/hyper-schema#"); s.createSchema({}, true, "http://json-schema.org/draft-03/links#"); k = s.createSchema(T, true, "http://json-schema.org/draft-03/schema#"); L = s.createSchema(n.inherits(k, s.createSchema(N, true, "http://json-schema.org/draft-03/hyper-schema#"), true), true, "http://json-schema.org/draft-03/hyper-schema#"); A = s.createSchema(C, true, "http://json-schema.org/draft-03/links#"); s.setOption("defaultSchemaURI", "http://json-schema.org/draft-03/hyper-schema#"); L = s.createSchema(L.getValue(), L, "http://json-schema.org/draft-03/hyper-schema#"); s.setOption("latestJSONSchemaSchemaURI", "http://json-schema.org/draft-03/schema#"); s.setOption("latestJSONSchemaHyperSchemaURI", "http://json-schema.org/draft-03/hyper-schema#"); s.setOption("latestJSONSchemaLinksURI", "http://json-schema.org/draft-03/links#"); s._schemas["http://json-schema.org/schema#"] = k; s._schemas["http://json-schema.org/hyper-schema#"] = L; s._schemas["http://json-schema.org/links#"] = A; n.registerEnvironment("json-schema-draft-03", s); if (!n.getDefaultEnvironmentID() || n.getDefaultEnvironmentID() === "json-schema-draft-01" || n.getDefaultEnvironmentID() === "json-schema-draft-02") { n.setDefaultEnvironmentID("json-schema-draft-03") } })(); e.JSONFormValidator = n.JSV })(this, false)