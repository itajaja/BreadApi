@model Hylasoft.BreadApi.Models.BreadModel
@{
  ViewBag.Title = Model.Bread.Name + " - BreadApi";
}
<div ng-controller="breadController" ng-init="getBreads('@Model.Bread.Name');">
  <h2>@Model.Bread.Name </h2>
  <div class="row">
    <div class="col-md-3">
      <div class="list-group">
          <a title="{{bread.Name}}" ng-repeat="bread in breads" class="list-group-item" ng-click="getMethods(bread)" ng-class="{active: isSelectedBread(bread)}">
            {{bread.Name}}
          </a>
      </div>
    </div>
    <div class="col-md-3">
      <div class="list-group">
          <a ng-repeat="method in methods track by $index" class="list-group-item">
            {{method}}
          </a>
      </div>
    </div>
    <div class="col-md-6">
      <h3 id="bread-form-title">Select a method</h3>
      <form id="bread-form"></form>
      <div id="result"></div>
    </div>
  </div>
  <div class="progress progress-striped active" ng-show="loading" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    margin-bottom: -12px;
">
    <div class="progress-bar" style="width: 100%"></div>
  </div>
</div>
@section scripts{
  <script type="text/javascript">
    $('.bread-method').click(function () {
      var breadClass = $(this).data('class');
      var breadMethod = $(this).data('method');
      $.post('@Url.Content("/")breads/@Model.Bread.Name/' + breadClass + '/' + breadMethod + '/params', function (data) {
        $('#bread-form-title').html(breadClass + '.' + breadMethod + ':');
        $('#bread-form').html(''); //resets the form
        $('#bread-form').jsonForm({
          schema: data,
          onSubmit: function (errors, values) {
            if (errors) {
              $('#result').val('errors are present, unable to submite request:\n' + errors);
            } else {
              $.post('@Url.Content("/")breads/@Model.Bread.Name/' + breadClass + '/' + breadMethod, values,
                function (data) {
                  $('#result').html('suceed:<br/><pre><code>' + JSON.stringify(data, undefined, 2) + '</code></pre>');
                });
          }
        }
      });
      });
    });
  </script>
}
<style>
  .list-group-item {
    text-overflow: ellipsis;
    overflow: hidden;
  }
</style>
